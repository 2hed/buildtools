<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Condition="'$(ResolveMatchingContract)' == 'true'">
    <ResolveReferencesDependsOn>
      ResolveMatchingContract;
      $(ResolveReferencesDependsOn)
    </ResolveReferencesDependsOn>
    <CleanDependsOn>
      ResolveMatchingContract;
      $(CleanDependsOn);
    </CleanDependsOn>
  </PropertyGroup>
  
  <Target Name="ResolveMatchingContract">
    <PropertyGroup>
      <_referenceAssemblyProject>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'ref/$(AssemblyName).csproj'))/ref/$(AssemblyName).csproj</_referenceAssemblyProject>
      <_versionReferenceAssemblyProject>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'ref/$(APIVersion)/$(AssemblyName).csproj'))/ref/$(APIVersion)/$(AssemblyName).csproj</_versionReferenceAssemblyProject>
    </PropertyGroup>
    <ItemGroup>
      <!-- first check for a specific version -->
      <ProjectReference Include="$(_versionReferenceAssemblyProject)" Condition="Exists('$(_versionReferenceAssemblyProject)')">
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        <OutputItemType>ResolvedMatchingContract</OutputItemType>
        <UndefineProperties>OSGroup;TargetGroup</UndefineProperties>
      </ProjectReference>
      <!-- fall back to 'current' version -->
      <ProjectReference Include="$(_referenceAssemblyProject)" Condition="!Exists('$(_versionReferenceAssemblyProject)') AND Exists('$(_referenceAssemblyProject)')">
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        <OutputItemType>ResolvedMatchingContract</OutputItemType>
        <UndefineProperties>OSGroup;TargetGroup</UndefineProperties>
      </ProjectReference>
    </ItemGroup>
  </Target>
</Project>
